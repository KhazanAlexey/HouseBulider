{"version":3,"sources":["House/Hall/Door/Door.module.scss","Controls/utils/superselect.module.css","House/Roof/Roof.module.scss","House/House.module.scss","House/Floor/Window/Window.module.scss","Controls/utils/SuperRange.module.css","House/Roof/Roof.tsx","House/Floor/Window/Window.tsx","House/Hall/Door/Door.tsx","House/Hall/Hall.tsx","House/Floor/Floor.tsx","House/House.tsx","state/houses-reducer.ts","Controls/HouseCount/HouseCount.tsx","Controls/SliderWithNum/SliderWithNum.tsx","Controls/utils/SuperRange.tsx","state/floor-reducer.ts","Controls/utils/SuperSelect.tsx","icon/3844460-can-trash_110351.svg","Controls/Controls.tsx","icon/3643769-building-home-house-main-menu-start_113416.svg","App.tsx","reportWebVitals.js","state/store.ts","index.tsx","App.module.scss"],"names":["module","exports","Roof","className","s","roof","Window","window","Door","React","memo","houseNumber","door","number","Hall","props","StyledHall","styled","div","color","Floor","StyledDiv","House","style","house","f","map","Floorid","h1","v1","h2","initialState","houseID","HouseCount","Title","h4","count","SliderWithNum","Floors","flors","SuperRange","type","onChange","onChangeRange","restProps","min","finalRangeClassName","range","e","currentTarget","value","addFloorAC","Houseid","florsValue","floorId","SuperSelect","mappedOptions","options","onChangeOption","o","key","option","selectClassname","select","arrColor","arrColorFloor","FloorsControl","Buttonwrapper","trashcan","Controls","dispatch","useDispatch","floorsCount","useSelector","state","floor","length","houseColor","floorColor","useCallback","col","onChangeColorFloor","delHouse","max","step","onClick","Iconwrapper","houseicon","App","lastnum","houses","useEffect","setnumberHouse","useState","numberHouse","floors","newHouseId","header","body","controlsWrapper","title","controls","c","footerControls","placeForHouses","h","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","persistedState","localStorage","getItem","JSON","parse","rootReducer","combineReducers","action","filter","stateCopy","currentHouseFloors","newColoredFloor","newColoredFloors","shift","newFloor","store","createStore","subscribe","setItem","stringify","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd02a9c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"door\":\"Door_door__3GeFD\",\"number\":\"Door_number__3CaKA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"superselect_select__wkY8Y\",\"option\":\"superselect_option__3aHED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"roof\":\"Roof_roof__2oB9_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"house\":\"House_house__2HgwJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window\":\"Window_window__3aseo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__23JvQ\"};","import s from './Roof.module.scss';\r\n\r\nfunction Roof() {\r\n    return (\r\n\r\n       <div className={s.roof}>\r\n\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default Roof;\r\n","import s from './Window.module.scss'\r\n\r\nfunction Window() {\r\n    return (\r\n\r\n        <div className={s.window}>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Window;\r\n","import s from './Door.module.scss'\r\nimport React from \"react\";\r\ntype PropsType={\r\n    houseNumber:number\r\n}\r\n\r\n\r\nconst Door=React.memo(function ({houseNumber}:PropsType) {\r\n    return (\r\n\r\n        <div className={s.door}>\r\n           House№ <div className={s.number} >{houseNumber}</div>\r\n        </div>\r\n    );\r\n})\r\n\r\n\r\n// function Door({houseNumber}:PropsType) {\r\n//     return (\r\n//\r\n//         <div className={s.door}>\r\n//            House№ <div className={s.number} >{houseNumber}</div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\nexport default Door;\r\n","import Window from \"../Floor/Window/Window\";\r\nimport Door from \"./Door/Door\";\r\nimport styled from \"styled-components\";\r\nimport React from \"react\";\r\ntype PtopsType={\r\n    color: string\r\n    houseNumber:number\r\n}\r\n\r\n\r\nconst Hall=React.memo(function (props:PtopsType) {\r\n    const StyledHall = styled.div`\r\n      width: 200px;\r\n      height: 100px;  \r\n      background: ${props.color};;\r\n      border-right: 3px solid black;\r\n      border-left: 3px solid black;\r\n      border-bottom:3px solid black;\r\n\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: space-around;\r\n      align-items: center;\r\n          `\r\n    return (\r\n        <StyledHall >\r\n            <Window/>\r\n            <Door houseNumber={props.houseNumber}/>\r\n        </StyledHall>\r\n    );\r\n})\r\n\r\n\r\nexport default Hall;\r\n","import Window from \"../Floor/Window/Window\";\r\nimport styled from \"styled-components\";\r\n\r\ntype Propstype = {\r\n    color: string\r\n}\r\n\r\n\r\nexport function Floor(props: Propstype) {\r\n    const StyledDiv = styled.div`\r\n      width: 200px;\r\n      height: 100px;\r\n      background: ${props.color};;\r\n      border-right: 3px solid black;\r\n      border-left: 3px solid black;\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: space-around;\r\n      align-items: center;\r\n    \r\n    `\r\n\r\n    return (\r\n        <StyledDiv>\r\n            <Window/>\r\n            <Window/>\r\n        </StyledDiv>\r\n    );\r\n}\r\n\r\nexport default Floor","import Roof from \"./Roof/Roof\";\r\nimport style from './House.module.scss'\r\nimport Hall from \"./Hall/Hall\";\r\nimport Floor from \"./Floor/Floor\";\r\nimport { FloorType} from \"../state/floor-reducer\";\r\nimport React from \"react\";\r\n\r\ntype PropsType = {\r\n    f: Array<FloorType>\r\n    houseNumber:number\r\n\r\n}\r\nconst House =(props: PropsType)=>{\r\n    return (\r\n\r\n        <div className={style.house}>\r\n            <Roof/>\r\n            {props.f.map(f => {\r\n\r\n                    return f.door ?  <Hall key={f.Floorid} houseNumber={props.houseNumber} color={f.color}/>:<Floor key={f.Floorid} color={f.color}/>\r\n                       }\r\n            )}\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default House;\r\n","import {v1} from 'uuid';\r\n\r\nexport type HouseType = {\r\n    houseID: string,\r\n    houseNumber:number\r\n\r\n\r\n}\r\nexport  type AddHouseTypeAC = {\r\n    type: 'ADD-HOUSE'\r\n    houseID: string\r\n    houseNumber:number\r\n}\r\ntype RemoveHouseTypeAC = {\r\n    type: 'REMOVE-HOUSE'\r\n    houseID: any\r\n}\r\n\r\ntype addFloorsAC={\r\n    type: 'ADD-FLOORS',\r\n    houseID: string\r\n    floors: number\r\n}\r\n\r\ntype ActionsTypes = AddHouseTypeAC |\r\n    RemoveHouseTypeAC | addFloorsAC\r\n\r\nexport const h1 = v1()\r\n\r\nexport const h2 = v1()\r\n\r\n\r\nconst initialState: Array<HouseType> = [\r\n    {houseID: h1,houseNumber:1}\r\n]\r\n\r\n\r\nexport const housesReducer = (state: Array<HouseType> = initialState, action: ActionsTypes): Array<HouseType> => {\r\n    switch (action.type) {\r\n\r\n        case 'ADD-HOUSE': {\r\n            return [...state, {\r\n                houseID: action.houseID,houseNumber:action.houseNumber\r\n            }]\r\n        }\r\n\r\n        case 'REMOVE-HOUSE': {\r\n\r\n             return state.filter(h => h.houseID !== action.houseID)\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const addHouseAC = (houseID: string,houseNumber:number): AddHouseTypeAC => {\r\n    return {type: 'ADD-HOUSE', houseID,houseNumber}\r\n}\r\nexport const removeHouseAC = (houseID: string) => {\r\n    return {type: 'REMOVE-HOUSE', houseID}\r\n}\r\n","import styled from \"styled-components\";\r\n\r\ntype Propstype = {\r\n    count:number\r\n}\r\n\r\n\r\nexport function HouseCount(props: Propstype) {\r\n    const StyledDiv = styled.div`\r\n   \r\n      justify-content: flex-start;\r\n      margin: 0;\r\n      padding: 0;\r\n          `\r\n    const Title = styled.h4`\r\n      display: inline-block;\r\n      width: 100%;\r\n`;\r\n\r\n    return (\r\n        <StyledDiv>\r\n            <Title><span>House {props.count}</span></Title>\r\n        </StyledDiv>\r\n    );\r\n}\r\n\r\nexport default HouseCount","import styled from \"styled-components\";\r\n\r\ntype Propstype = {\r\nflors:number\r\n}\r\n\r\n\r\nexport function SliderWithNum(props: Propstype) {\r\n    const StyledDiv = styled.div`\r\n      width:50%;\r\n      height: 50px; \r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      font-size: small;\r\n\r\n    `\r\n    const Floors = styled.div`\r\n      width: 20px;\r\n      height: 20px; \r\n     border: 1px solid;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n      margin-block-start: 0;\r\n      margin-block-end: 0;\r\n      font-size: small;\r\n   `\r\n    return (\r\n        <StyledDiv>\r\n            <span>Floors: </span>\r\n           <Floors>\r\n               {props.flors}\r\n           </Floors>\r\n        </StyledDiv>\r\n    );\r\n}\r\n\r\nexport default SliderWithNum","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperRange.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeRange,\r\n        className,\r\n        min,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e) // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value)\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'range'}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRange\r\n","import {v1} from \"uuid\";\r\nimport {AddHouseTypeAC, h1, h2} from \"./houses-reducer\";\r\n\r\nexport type FloorType = {\r\n    Floorid: string\r\n    color: string\r\n    door:boolean\r\n}\r\n\r\nexport type FloorStateType = {\r\n    [key: string]: Array<FloorType>\r\n}\r\nconst initialState: FloorStateType = {\r\n[h1]: [{color:'',Floorid:h2,door:true}]\r\n\r\n\r\n}\r\n\r\n\r\nexport const floorReducer = (state: FloorStateType = initialState, action: ActionsType): FloorStateType => {\r\n    switch (action.type) {\r\n        case 'CHANGE-COLOR': {\r\n            const stateCopy = {...state}\r\n            let currentHouseFloors = stateCopy[action.Houseid];\r\n\r\n            // let newColoredFloor= currentHouseFloors.map(f=>{if(f.color){\r\n            //     return{\r\n            //         ...f,color: action.color\r\n            //     }\r\n            // } else\r\n            //  return    { ...f}\r\n            // })\r\n            let newColoredFloor = currentHouseFloors.map(f => {\r\n                return {\r\n                    ...f, color: action.color\r\n                }\r\n            })\r\n\r\n            stateCopy[action.Houseid] = [...newColoredFloor]\r\n            return stateCopy\r\n        }\r\n        case \"CHANGE-COLOR-FLOOR\": {\r\n            const stateCopy = {...state}\r\n            let currentHouseFloors = stateCopy[action.Houseid];\r\n            let newColoredFloors=currentHouseFloors.map(f=>\r\n                f.color==='white'? {...f,color: action.color}:{...f}\r\n            )\r\n\r\n            stateCopy[action.Houseid] = [...newColoredFloors]\r\n            return stateCopy\r\n        }\r\n        case 'ADD-HOUSE': {\r\n            return {\r\n                ...state,\r\n                [action.houseID]: []\r\n            }\r\n        }\r\n        case 'ADD-FLOOR': {\r\n            const stateCopy = {...state}\r\n\r\n            let currentHouseFloors = stateCopy[action.Houseid];\r\n            if (action.florsValue < currentHouseFloors.length) {\r\n                currentHouseFloors.shift()\r\n\r\n            } else {\r\n                const newFloor: FloorType = {\r\n                    Floorid: v1(),\r\n                    color: action.color,\r\n                    door: action.door\r\n                }\r\n                const floors = [newFloor, ...currentHouseFloors];\r\n                stateCopy[action.Houseid] = floors;\r\n            }\r\n\r\n\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\ntype ActionsType = ReturnType<typeof changeColorAC> | ReturnType<typeof addFloorAC> |AddHouseTypeAC |\r\n    ReturnType<typeof changeColorFloorAC>\r\n\r\nexport const addFloorAC = (Houseid: string, color: string, florsValue: number,door:boolean,floorId:string) => ({\r\n    type: 'ADD-FLOOR',\r\n    Houseid,\r\n    color,\r\n    florsValue,\r\n    door,\r\n    floorId\r\n} as const)\r\nexport const changeColorAC = (Houseid: string, color: string) => ({type: 'CHANGE-COLOR', Houseid, color} as const)\r\nexport const changeColorFloorAC = (Houseid: string, color: string) => ({type: 'CHANGE-COLOR-FLOOR', Houseid, color} as const)\r\n\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\nimport s from './superselect.module.css'\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: string[]\r\n    onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\nlet mappedOptions\r\n    if (options){\r\n         mappedOptions =\r\n            options?.map((o,key)=><option className={s.option} key={key} value={o} >{o}</option> ); // map options with key\r\n    }\r\n\r\nconst selectClassname=s.select\r\n\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChange&&onChange(e)\r\n\r\n        // onChange, onChangeOption\r\n        onChangeOption&&onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select className={selectClassname} onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","export default __webpack_public_path__ + \"static/media/3844460-can-trash_110351.a309e0e4.svg\";","import styled from \"styled-components\";\r\nimport HouseCount from \"./HouseCount/HouseCount\";\r\nimport SliderWithNum from \"./SliderWithNum/SliderWithNum\";\r\nimport SuperRange from \"./utils/SuperRange\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../state/store\";\r\nimport {addFloorAC, changeColorAC, changeColorFloorAC, FloorType} from \"../state/floor-reducer\";\r\nimport SuperSelect from \"./utils/SuperSelect\";\r\nimport React, {useCallback} from \"react\";\r\nimport {removeHouseAC} from \"../state/houses-reducer\";\r\nimport {v1} from \"uuid\";\r\nimport trashcan from '../icon/3844460-can-trash_110351.svg';\r\n\r\ntype Propstype = {\r\n    houseID: string\r\n    houseNumber: number\r\n}\r\nconst arrColor = ['white', 'orange', 'green', 'black', 'blue', 'red']\r\nconst arrColorFloor = ['white', 'orange', 'green', 'black', 'blue', 'red']\r\nconst floorId = v1()\r\nconst StyledDiv = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: relative;\r\n  @media screen and (max-width: 729px) {\r\n    flex-direction: column;\r\n    .select {\r\n      width: 100px;\r\n    }\r\n  }\r\n`;\r\nconst FloorsControl = styled.div`\r\n  max-width: 100px;\r\n  min-width: 100px;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  margin-block-start: 0;\r\n  @media screen and (max-width: 729px) {\r\n    width: 100%;\r\n    max-width: 100%;\r\n  }\r\n`\r\nconst Buttonwrapper = styled.div`\r\n  margin: 3px;\r\n  background-image: url(${trashcan});\r\n  width: 30px;\r\n  height: 20px;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  border: 1px solid;;\r\n`\r\nconst Controls = (props: Propstype) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const floorsCount = useSelector<AppRootStateType, Array<FloorType>>(state => state.floor[props.houseID]).length\r\n    const houseColor = useSelector<AppRootStateType, string>(state => state.floor[props.houseID][0].color)\r\n    const floorColor = useSelector<AppRootStateType, string>(state => state.floor[props.houseID][state.floor[props.houseID].length - 1].color)\r\n    ///set color house\r\n    const onChangeOption = useCallback((col: string) => {\r\n        dispatch(changeColorAC(props.houseID, col))\r\n    }, [props.houseID, dispatch])\r\n\r\n\r\n    ///set color floor\r\n    const onChangeColorFloor = useCallback((col: string) => {\r\n        dispatch(changeColorFloorAC(props.houseID, col))\r\n    }, [props.houseID, dispatch])\r\n\r\n    ///add or reduce floor\r\n    const onChangeRange = (value: number) => {\r\n        if (value < 1) {\r\n            return;\r\n        }\r\n\r\n        dispatch(addFloorAC(props.houseID, \"white\", value, false, floorId))\r\n        // if you want all floors same color just use next line\r\n        // dispatch(changeColorAC(props.houseID, houseColor))\r\n    }\r\n    ///removeHouse\r\n    const delHouse = useCallback(() => {\r\n        dispatch(removeHouseAC(props.houseID))\r\n    }, [props.houseID, dispatch])\r\n\r\n\r\n    return (\r\n        <StyledDiv>\r\n\r\n            <FloorsControl>\r\n                <HouseCount count={props.houseNumber}/>\r\n                <SliderWithNum flors={floorsCount}/>\r\n                <SuperRange onChangeRange={onChangeRange} max={9} step={1} value={floorsCount} min={1}/>\r\n\r\n            </FloorsControl>\r\n            <div className={'select'}><span>color house:</span> <SuperSelect\r\n                options={arrColor}\r\n                value={floorColor}\r\n                onChangeOption={onChangeOption}\r\n            /></div>\r\n            <div className={'select'}><span>color floor: </span><SuperSelect\r\n                options={arrColorFloor}\r\n                value={houseColor}\r\n                onChangeOption={onChangeColorFloor}\r\n            /></div>\r\n            <Buttonwrapper onClick={delHouse}>\r\n                {/*<button  onClick={delHouse}>X</button>*/}\r\n            </Buttonwrapper>\r\n        </StyledDiv>\r\n    );\r\n}\r\n\r\n\r\nexport default Controls","export default __webpack_public_path__ + \"static/media/3643769-building-home-house-main-menu-start_113416.238d9bc6.svg\";","import s from './App.module.scss';\nimport House from \"./House/House\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"./state/store\";\nimport {addHouseAC, HouseType,} from \"./state/houses-reducer\";\nimport Controls from \"./Controls/Controls\";\nimport {v1} from \"uuid\";\nimport {addFloorAC} from \"./state/floor-reducer\";\nimport { useEffect,  useState} from \"react\";\nimport houseicon from \"./icon/3643769-building-home-house-main-menu-start_113416.svg\";\nimport styled from \"styled-components\";\nconst Iconwrapper = styled.div`\n  margin: 3px;\n  background-image: url(${houseicon});\n  width: 20px;\n  height: 20px;\n  background-repeat: no-repeat;\n  background-position: center;\n\n`\nfunction App() {\n    const lastnum = useSelector<AppRootStateType, number>(state => state.houses[state.houses.length-1].houseNumber)\n\n    useEffect(() => {\n        setnumberHouse((lastnum+1))\n    }, [lastnum])\n\n    const [numberHouse, setnumberHouse] = useState(lastnum)\n\n    const dispatch = useDispatch()\n    const house = useSelector<AppRootStateType, Array<HouseType>>(state => state.houses)\n    const floors = useSelector<AppRootStateType, any>(state => state.floor)\n    const newHouseId = v1()\nconst floorId=v1()\n    function num() {\n        setnumberHouse(numberHouse + 1)\n    }\n\n    const addHouseHandler = () => {\n        num()\n        dispatch(addHouseAC(newHouseId, numberHouse))\n        dispatch(addFloorAC(newHouseId, 'white', 1, true,floorId))\n    }\n\n    return (\n        <div className={s.App}>\n            <header className={s.header}>\n                City Byilder\n            </header>\n\n            <div className={s.body}>\n                <div className={s.controlsWrapper}>\n                    <div className={s.title}>\n                        Houses List\n                    </div>\n                    <div className={s.controls}>\n                        {house.map((c) => {\n\n                            return <Controls key={c.houseID} houseNumber={c.houseNumber}\n                                             houseID={c.houseID}/>\n                        })}\n\n\n                    </div>\n                    <div className={s.footerControls}>\n                        <button onClick={addHouseHandler}><Iconwrapper></Iconwrapper>Build new house</button>\n                    </div>\n                </div>\n                <div className={s.placeForHouses}>\n                    {house.map(h => {\n                        let f = floors[h.houseID]\n\n\n                        return <House key={h.houseID} f={f} houseNumber={h.houseNumber} />\n\n\n                    })\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// import * as persistState from \"redux-localstorage\";\r\nimport {combineReducers, createStore} from 'redux';\r\nimport {housesReducer} from \"./houses-reducer\";\r\nimport {floorReducer} from \"./floor-reducer\";\r\n\r\n// объединяя reducer-ы с помощью combineReducers,\r\n// мы задаём структуру нашего единственного объекта-состояния\r\n// @ts-ignore\r\nconst persistedState = localStorage.getItem('reduxState')  ? JSON.parse(localStorage.getItem('reduxState'))\r\n    : {}\r\nconst rootReducer = combineReducers({\r\n    houses: housesReducer,\r\n    floor: floorReducer\r\n})\r\n\r\n// непосредственно создаём store\r\nexport const store = createStore(rootReducer,persistedState);\r\n// определить автоматически тип всего объекта состояния\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// а это, чтобы можно было в консоли браузера обращаться к store в любой момент\r\n// @ts-ignore\r\nwindow.store = store;\r\nstore.subscribe(()=>{\r\n    localStorage.setItem('reduxState', JSON.stringify(store.getState()))\r\n})\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./state/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}><App/></Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2YU5y\",\"header\":\"App_header__217Oq\",\"body\":\"App_body__1OJOW\",\"controlsWrapper\":\"App_controlsWrapper__388zM\",\"title\":\"App_title__13KOu\",\"footerControls\":\"App_footerControls__3Wefr\",\"controls\":\"App_controls__39StL\",\"placeForHouses\":\"App_placeForHouses__1Bblx\"};"],"sourceRoot":""}