{"version":3,"sources":["Controls/utils/superselect.module.css","House/Roof/Roof.module.scss","House/House.module.scss","House/Floor/Window/Window.module.scss","House/Hall/Door/Door.module.scss","Controls/utils/SuperRange.module.css","House/Roof/Roof.tsx","House/Floor/Window/Window.tsx","House/Hall/Door/Door.tsx","House/Hall/Hall.tsx","House/Floor/Floor.tsx","House/House.tsx","state/houses-reducer.ts","Controls/HouseCount/HouseCount.tsx","Controls/SliderWithNum/SliderWithNum.tsx","Controls/utils/SuperRange.tsx","state/floor-reducer.ts","Controls/utils/SuperSelect.tsx","Controls/Controls.tsx","App.tsx","reportWebVitals.js","state/store.ts","index.tsx","App.module.scss"],"names":["module","exports","Roof","className","s","roof","Window","window","Door","door","Hall","props","StyledHall","styled","div","color","Floor","StyledDiv","House","style","house","f","map","Floorid","h1","v1","h2","initialState","houseID","floors","HouseCount","count","SliderWithNum","Floors","flors","SuperRange","type","onChange","onChangeRange","restProps","min","finalRangeClassName","range","e","currentTarget","value","addFloorAC","Houseid","florsValue","SuperSelect","mappedOptions","options","onChangeOption","o","key","option","selectClassname","select","arrColor","Controls","FloorsControl","useState","onChangecolor","setFlors","dispatch","useDispatch","floorsCount","useSelector","state","houses","length","floor","useEffect","addFloorsAC","housenumber","max","step","col","changeColorAC","App","newHouseId","haederWrapper","header","body","controlsWrapper","title","controls","c","footerControls","onClick","addHouseAC","placeForHouses","h","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","copyState","stateCopy","currentHouseFloors","newColoredFloor","shift","newFloor","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0a758db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"superselect_select__wkY8Y\",\"option\":\"superselect_option__3aHED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"roof\":\"Roof_roof__2oB9_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"house\":\"House_house__2HgwJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window\":\"Window_window__3aseo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"door\":\"Door_door__3GeFD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__23JvQ\"};","import s from './Roof.module.scss';\r\n\r\nfunction Roof() {\r\n    return (\r\n\r\n       <div className={s.roof}>\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default Roof;\r\n","import s from './Window.module.scss'\r\n\r\nfunction Window() {\r\n    return (\r\n\r\n        <div className={s.window}>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Window;\r\n","import s from './Door.module.scss'\r\n\r\nfunction Door() {\r\n    return (\r\n\r\n        <div className={s.door}>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Door;\r\n","import hallstyle from './hall.module.scss';\r\nimport Window from \"../Floor/Window/Window\";\r\nimport Door from \"./Door/Door\";\r\nimport styled from \"styled-components\";\r\ntype PtopsType={\r\n    color: string\r\n}\r\nfunction Hall(props:PtopsType) {\r\n    const StyledHall = styled.div`\r\n      width: 200px;\r\n      height: 100px;  \r\n      background: ${props.color};;\r\n      border-right: 3px solid black;\r\n      border-left: 3px solid black;\r\n      border-bottom:3px solid black;\r\n      \r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: space-around;\r\n      align-items: center;\r\n          `\r\n    return (\r\n        <StyledHall >\r\n            <Window/>\r\n            <Door/>\r\n        </StyledHall>\r\n    );\r\n}\r\n\r\nexport default Hall;\r\n","import s from './Floor.module.scss'\r\nimport Window from \"../Floor/Window/Window\";\r\nimport styled from \"styled-components\";\r\n\r\ntype Propstype = {\r\n    color: string\r\n}\r\n\r\n\r\nexport function Floor(props: Propstype) {\r\n    const StyledDiv = styled.div`\r\n      width: 200px;\r\n      height: 100px; \r\n      background: ${props.color};;\r\n      border-right: 3px solid black;\r\n      border-left: 3px solid black;\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: space-around;\r\n      align-items: center;\r\n          `\r\n\r\n    return (\r\n        <StyledDiv>\r\n            <Window/>\r\n            <Window/>\r\n        </StyledDiv>\r\n    );\r\n}\r\n\r\nexport default Floor","import s from './App.module.scss';\r\nimport Roof from \"./Roof/Roof\";\r\nimport style from './House.module.scss'\r\nimport Hall from \"./Hall/Hall\";\r\nimport Floor from \"./Floor/Floor\";\r\nimport {FloorStateType, FloorType} from \"../state/floor-reducer\";\r\nimport styled from 'styled-components'\r\n\r\ntype PropsType = {\r\n    key: any\r\n    f: Array<FloorType>\r\n}\r\n\r\nfunction House(props: PropsType) {\r\n\r\n    // const col=props.f[0].color\r\n    return (\r\n\r\n        <div className={style.house}>\r\n            <Roof/>\r\n            {props.f.map(f => {\r\n                    return f.door ?  <Hall color={f.color}/>:<Floor key={f.Floorid} color={f.color}/>\r\n                       }\r\n            )}\r\n           \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default House;\r\n","import {v1} from 'uuid';\r\n\r\nexport type HouseType = {\r\n    houseID: string,\r\n    floors:number\r\n\r\n\r\n}\r\nexport  type AddHouseTypeAC = {\r\n    type: 'ADD-HOUSE'\r\n    houseID: string\r\n    floors:number\r\n}\r\ntype RemoveHouseTypeAC = {\r\n    type: 'REMOVE-HOUSE'\r\n    houseID: any\r\n}\r\ntype SetHallColorTypeAC = {\r\n    type: 'SETCOLOR-HALL'\r\n    houseID: string\r\n    hallcolor: string\r\n}\r\ntype addFloorsAC={\r\n    type: 'ADD-FLOORS',\r\n    houseID: string\r\n    floors: number\r\n}\r\ntype ActionsTypes = AddHouseTypeAC |\r\n    RemoveHouseTypeAC | SetHallColorTypeAC |addFloorsAC\r\n\r\nexport const h1 = v1()\r\n\r\nexport const h2 = v1()\r\n\r\n\r\nconst initialState: Array<HouseType> = [\r\n    {houseID: h1,floors:1}\r\n]\r\n\r\n\r\nexport const housesReducer = (state: Array<HouseType> = initialState, action: ActionsTypes): Array<HouseType> => {\r\n    switch (action.type) {\r\n\r\n        case 'ADD-HOUSE': {\r\n            return [...state, {\r\n                houseID: action.houseID,floors:action.floors\r\n            }]\r\n        }\r\n\r\n        case 'REMOVE-HOUSE': {\r\n            const copyState = {...state};\r\n            delete copyState[action.houseID];\r\n            return copyState;\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const addHouseAC = (houseID: string,floors:number): AddHouseTypeAC => {\r\n    return {type: 'ADD-HOUSE', houseID,floors}\r\n}\r\nexport const removeHouseAC = (houseID: string) => {\r\n    return {type: 'REMOVE-HOUSE', houseID}\r\n}\r\nexport const setHallColorAC = (houseID: any, hallcolor: string) => {\r\n    return {type: 'SETCOLOR-HALL', houseID, hallcolor}\r\n}\r\nexport const addFloorsAC = (houseID: any, floors:number) => {\r\n    return {type: 'ADD-FLOORS', houseID, floors}\r\n}","import s from './Floor.module.scss'\r\nimport styled from \"styled-components\";\r\n\r\ntype Propstype = {\r\n    count:number\r\n}\r\n\r\n\r\nexport function HouseCount(props: Propstype) {\r\n    const StyledDiv = styled.div`\r\n   \r\n      justify-content: flex-start;\r\n      margin: 0;\r\n      padding: 0;\r\n          `\r\n\r\n    return (\r\n        <StyledDiv>\r\n            <span>House {props.count}</span>\r\n        </StyledDiv>\r\n    );\r\n}\r\n\r\nexport default HouseCount","import s from './Floor.module.scss'\r\nimport styled from \"styled-components\";\r\n\r\ntype Propstype = {\r\nflors:number\r\n}\r\n\r\n\r\nexport function SliderWithNum(props: Propstype) {\r\n    const StyledDiv = styled.div`\r\n      width:30%;\r\n      height: 50px; \r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      font-size: small;\r\n\r\n    `\r\n    const Floors = styled.div`\r\n      width: 20px;\r\n      height: 20px; \r\n     border: 1px solid;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n      margin-block-start: 0;\r\n      margin-block-end: 0;\r\n      font-size: small;\r\n   `\r\n    return (\r\n        <StyledDiv>\r\n            <span>Floors: </span>\r\n           <Floors>\r\n               {props.flors}\r\n           </Floors>\r\n        </StyledDiv>\r\n    );\r\n}\r\n\r\nexport default SliderWithNum","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperRange.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeRange,\r\n        className,\r\n        min,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e) // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value)\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'range'}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRange\r\n","import {v1} from \"uuid\";\r\nimport {AddHouseTypeAC, h1, h2} from \"./houses-reducer\";\r\nimport Floor from \"../House/Floor/Floor\";\r\n\r\nexport type FloorType = {\r\n    Floorid: string\r\n    color: string\r\n    door:boolean\r\n}\r\n\r\nexport type FloorStateType = {\r\n    [key: string]: Array<FloorType>\r\n}\r\nconst initialState: FloorStateType = {\r\n[h1]: [{color:'white',Floorid:h2,door:true}]\r\n\r\n\r\n}\r\n\r\n\r\nexport const floorReducer = (state: FloorStateType = initialState, action: ActionsType): FloorStateType => {\r\n    switch (action.type) {\r\n        case 'CHANGE-COLOR': {\r\n            const stateCopy = {...state}\r\n            let currentHouseFloors = stateCopy[action.Houseid];\r\n\r\n            // let newColoredFloor= currentHouseFloors.map(f=>{if(f.color){\r\n            //     return{\r\n            //         ...f,color: action.color\r\n            //     }\r\n            // } else\r\n            //  return    { ...f}\r\n            // })\r\n            let newColoredFloor = currentHouseFloors.map(f => {\r\n                return {\r\n                    ...f, color: action.color\r\n                }\r\n            })\r\n\r\n            stateCopy[action.Houseid] = [...newColoredFloor]\r\n            return stateCopy\r\n        }\r\n        case 'ADD-HOUSE': {\r\n            return {\r\n                ...state,\r\n                [action.houseID]: []\r\n            }\r\n        }\r\n        case 'ADD-FLOOR': {\r\n            const stateCopy = {...state}\r\n\r\n            let currentHouseFloors = stateCopy[action.Houseid];\r\n            if (action.florsValue < currentHouseFloors.length) {\r\n                currentHouseFloors.shift()\r\n\r\n            } else {\r\n                const newFloor: FloorType = {\r\n                    Floorid: v1(),\r\n                    color: '',\r\n                    door: action.door\r\n                }\r\n                const floors = [newFloor, ...currentHouseFloors];\r\n                stateCopy[action.Houseid] = floors;\r\n            }\r\n\r\n\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\ntype ActionsType = ReturnType<typeof changeColorAC> | ReturnType<typeof addFloorAC> |AddHouseTypeAC\r\n\r\nexport const addFloorAC = (Houseid: string, color: string, florsValue: number,door:boolean) => ({\r\n    type: 'ADD-FLOOR',\r\n    Houseid,\r\n    color,\r\n    florsValue,\r\n    door\r\n} as const)\r\nexport const changeColorAC = (Houseid: string, color: string) => ({type: 'CHANGE-COLOR', Houseid, color} as const)\r\n\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\nimport s from './superselect.module.css'\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: string[]\r\n    onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\nlet mappedOptions\r\n    if (options){\r\n         mappedOptions =\r\n            options?.map((o,key)=><option className={s.option} key={key} value={o} >{o}</option> ); // map options with key\r\n    }\r\n\r\nconst selectClassname=s.select\r\n\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChange&&onChange(e)\r\n\r\n        // onChange, onChangeOption\r\n        onChangeOption&&onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select className={selectClassname} onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import s from './Floor.module.scss'\r\nimport styled from \"styled-components\";\r\nimport HouseCount from \"./HouseCount/HouseCount\";\r\nimport SliderWithNum from \"./SliderWithNum/SliderWithNum\";\r\nimport SuperRange from \"./utils/SuperRange\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../state/store\";\r\nimport {addFloorsAC, addHouseAC, h1, HouseType} from \"../state/houses-reducer\";\r\nimport {addFloorAC, changeColorAC, floorReducer, FloorType} from \"../state/floor-reducer\";\r\nimport {useEffect, useState} from 'react';\r\nimport {v1} from \"uuid\";\r\nimport SuperSelect from \"./utils/SuperSelect\";\r\n\r\ntype Propstype = {\r\n    houseID: string\r\n    floorsCount: number\r\n    housenumber:number\r\n}\r\nconst arrColor = ['', 'green', 'black', 'blue', 'white', 'red']\r\n\r\n\r\nexport function Controls(props: Propstype) {\r\n    const StyledDiv = styled.div`\r\n      width: 100%;\r\n      border: 1px solid;\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: flex-start;\r\n      align-items: center;\r\n    `\r\n    const FloorsControl = styled.div`\r\n      width: 50%;\r\n      height: 100%;\r\n      border: 1px solid;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: flex-start;\r\n      align-items: flex-start;\r\n      margin-block-start: 0;\r\n      margin-block-end: 0;\r\n    `\r\n    const [color, onChangecolor] = useState('')\r\n\r\n    const [floors, setFlors] = useState(1\r\n    )\r\n\r\n    const dispatch = useDispatch()\r\n    const housecount = useSelector<AppRootStateType, Array<HouseType>>(state => state.houses).length\r\n    const floorsCount = useSelector<AppRootStateType, Array<FloorType>>(state => state.floor[props.houseID]).length\r\n    const onChangeOption = (col: string) => {\r\n        dispatch(changeColorAC(props.houseID, col))\r\n\r\n        onChangecolor(col)\r\n    }\r\n    useEffect(() => {\r\n            dispatch(addFloorsAC(props.houseID, floors))\r\n        },\r\n        [floors, setFlors])\r\n    const onChangeRange = (value: number) => {\r\n        if (value < 1) {\r\n            return;\r\n            \r\n        }\r\n\r\n        // early return\r\n\r\n        dispatch(addFloorAC(props.houseID, \"black\", value, false))\r\n        setFlors(value)\r\n    }\r\n\r\n    return (\r\n        <StyledDiv>\r\n\r\n            <FloorsControl>\r\n                <HouseCount count={props.housenumber}/>\r\n                <SliderWithNum flors={floorsCount}/>\r\n                <SuperRange onChangeRange={onChangeRange} max={9} step={1} value={floors} min={1}/>\r\n            </FloorsControl>\r\n            <SuperSelect\r\n                options={arrColor}\r\n                value={color}\r\n                onChangeOption={onChangeOption}\r\n            />\r\n\r\n        </StyledDiv>\r\n    );\r\n}\r\n\r\nexport default Controls","import s from './App.module.scss';\nimport House from \"./House/House\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"./state/store\";\nimport {addHouseAC, HouseType, setHallColorAC} from \"./state/houses-reducer\";\nimport Controls from \"./Controls/Controls\";\nimport {v1} from \"uuid\";\nimport {addFloorAC} from \"./state/floor-reducer\";\n\nfunction App() {\n    const dispatch = useDispatch()\n    const house = useSelector<AppRootStateType, Array<HouseType>>(state => state.houses)\n    const floors = useSelector<AppRootStateType, any>(state => state.floor)\n    const newHouseId = v1()\n    const addHouseHandler = () => {\n        dispatch(addHouseAC(newHouseId,1))\n        dispatch(addFloorAC(newHouseId, '', 1, true))\n\n    }\n\n    return (\n        <div className={s.App}>\n            <div className={s.haederWrapper}>eeeeee</div>\n            <header className={s.header}>\n                City Byilder\n            </header>\n\n            <div className={s.body}>\n                <div className={s.controlsWrapper}>\n                    <div className={s.title}>\n                        Houses List\n                    </div>\n                    <div className={s.controls}>\n                        {house.map((c,count) => <Controls housenumber={count+1} floorsCount={c.floors} houseID={c.houseID}/>)}\n\n\n\n                    </div>\n                    <div className={s.footerControls}>\n                        <button onClick={addHouseHandler}>Add house</button>\n                    </div>\n                </div>\n                <div className={s.placeForHouses}>\n                    {house.map(h => {\n                        let f = floors[h.houseID]\n\n\n                        return <House f={f} key={h.houseID}/>\n\n\n                    })\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nimport {combineReducers, createStore} from 'redux';\r\nimport {housesReducer} from \"./houses-reducer\";\r\nimport {floorReducer} from \"./floor-reducer\";\r\n\r\n// объединяя reducer-ы с помощью combineReducers,\r\n// мы задаём структуру нашего единственного объекта-состояния\r\nconst rootReducer = combineReducers({\r\n    houses: housesReducer,\r\n    floor: floorReducer\r\n})\r\n// непосредственно создаём store\r\nexport const store = createStore(rootReducer);\r\n// определить автоматически тип всего объекта состояния\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// а это, чтобы можно было в консоли браузера обращаться к store в любой момент\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./state/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}><App/></Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2YU5y\",\"header\":\"App_header__217Oq\",\"body\":\"App_body__1OJOW\",\"controlsWrapper\":\"App_controlsWrapper__388zM\",\"title\":\"App_title__13KOu\",\"footerControls\":\"App_footerControls__3Wefr\",\"controls\":\"App_controls__39StL\",\"placeForHouses\":\"App_placeForHouses__1Bblx\"};"],"sourceRoot":""}